{
  "Name": "pod_security_policy",
  "PodsDestroyed": 0,
  "ScenariosAttempted": 36,
  "ScenariosSucceeded": 25,
  "ScenariosFailed": 11,
  "Result": "Failed",
  "Scenarios": {
    "1": {
      "Name": "Prevent a deployment from running with privileged access",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.1"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someControlExistsToPreventPrivilegedAccessForKubernetesDeploymentsToAnActiveKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "privilegedAccessRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresPrivilegedAccess",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "10": {
      "Name": "Prevent a deployment from running with the hostNetwork flag.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.4"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheHostNetworkInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostNetworkRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostNetworkNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "11": {
      "Name": "Prevent a deployment from running with the hostNetwork flag.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.4"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheHostNetworkInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostNetworkRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostNetworkNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "12": {
      "Name": "Prevent a deployment from running with the hostNetwork flag.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.4"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheHostNetworkInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostNetworkRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostNetworkNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "13": {
      "Name": "Prevent a deployment from running with the allowPrivilegeEscalation flag",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.5"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheAllowPrivilegeEscalationInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "privilegedEscalationIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Failed",
          "Error": "pod not was created but failure reasons (map[podcreation-error: psp-container-no-privilege:podcreation-error: psp-container-no-privilege]) did not contain expected (podcreation-error: psp-container-no-privilege-escalation)- test failed",
          "Payload": null
        }
      }
    },
    "14": {
      "Name": "Prevent a deployment from running with the allowPrivilegeEscalation flag",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.5"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheAllowPrivilegeEscalationInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "privilegedEscalationIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresPrivilegedAccess",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "15": {
      "Name": "Prevent a deployment from running with the allowPrivilegeEscalation flag",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.5"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheAllowPrivilegeEscalationInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "privilegedEscalationIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresPrivilegedAccess",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "16": {
      "Name": "Prevent a deployment from running as the root user",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.6"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningAsTheRootUserInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "theUserRequestedIsForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "theKubernetesDeploymentShouldRunWithANonrootUID",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "17": {
      "Name": "Prevent a deployment from running as the root user",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.6"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningAsTheRootUserInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "theUserRequestedIsForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "theKubernetesDeploymentShouldRunWithANonrootUID",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "18": {
      "Name": "Prevent a deployment from running as the root user",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.6"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningAsTheRootUserInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "theUserRequestedIsForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "theKubernetesDeploymentShouldRunWithANonrootUID",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "19": {
      "Name": "Prevent deployments from running with the NET_RAW capability.",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.7"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningWithNETRAWCapabilityInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Failed",
          "Error": "NETRAWIsRestricted is NOT restricted (result: false)",
          "Payload": null
        }
      }
    },
    "2": {
      "Name": "Prevent a deployment from running with privileged access",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.1"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someControlExistsToPreventPrivilegedAccessForKubernetesDeploymentsToAnActiveKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "privilegedAccessRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresPrivilegedAccess",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "20": {
      "Name": "Prevent deployments from running with the NET_RAW capability.",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.7"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningWithNETRAWCapabilityInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Failed",
          "Error": "NETRAWIsRestricted is NOT restricted (result: false)",
          "Payload": null
        }
      }
    },
    "21": {
      "Name": "Prevent deployments from running with the NET_RAW capability.",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.7"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningWithNETRAWCapabilityInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Failed",
          "Error": "NETRAWIsRestricted is NOT restricted (result: false)",
          "Payload": null
        }
      }
    },
    "22": {
      "Name": "Prevent container running with capabilities beyond the default set.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.8"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithCapabilitiesBeyondTheDefaultSetFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "additionalCapabilitiesForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresCapabilitiesOutsideOfTheDefaultSet",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "23": {
      "Name": "Prevent container running with capabilities beyond the default set.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.8"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithCapabilitiesBeyondTheDefaultSetFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "additionalCapabilitiesForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresCapabilitiesOutsideOfTheDefaultSet",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "24": {
      "Name": "Prevent container running with capabilities beyond the default set.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.8"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithCapabilitiesBeyondTheDefaultSetFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "additionalCapabilitiesForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresCapabilitiesOutsideOfTheDefaultSet",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "25": {
      "Name": "Prevent deployments from running with assigned capabilities.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.9"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithAssignedCapabilitiesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "assignedCapabilitiesForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresAnyCapabilities",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "26": {
      "Name": "Prevent deployments from running with assigned capabilities.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.9"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithAssignedCapabilitiesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "assignedCapabilitiesForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresAnyCapabilities",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "27": {
      "Name": "Prevent deployments from running with assigned capabilities.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.9"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithAssignedCapabilitiesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "assignedCapabilitiesForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresAnyCapabilities",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "28": {
      "Name": "Prevent deployments from accessing unapproved port range",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.1"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithUnapprovedPortRangeFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anPortRangeIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatAccessAnUnapprovedPortRange",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "29": {
      "Name": "Prevent deployments from accessing unapproved port range",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.1"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithUnapprovedPortRangeFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anPortRangeIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Failed",
          "Error": "pod was not created - test failed: pod creation error: map[podcreation-error: psp-container-allowed-images:podcreation-error: psp-host-network] admission webhook \"validation.gatekeeper.sh\" denied the request: [denied by azurepolicy-container-allowed-images-d0318bd54c8157a6fe8c] Container image busybox for container sec-ctx-demo has not been allowed.",
          "Payload": null
        }
      }
    },
    "3": {
      "Name": "Prevent a deployment from running with privileged access",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.1"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someControlExistsToPreventPrivilegedAccessForKubernetesDeploymentsToAnActiveKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "privilegedAccessRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatRequiresPrivilegedAccess",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "30": {
      "Name": "Prevent deployments from accessing unapproved port range",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.1"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithUnapprovedPortRangeFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anPortRangeIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Failed",
          "Error": "pod was not created - test failed: pod creation error: map[podcreation-error: psp-container-allowed-images:podcreation-error: psp-container-no-privilege] admission webhook \"validation.gatekeeper.sh\" denied the request: [denied by azurepolicy-container-allowed-images-d0318bd54c8157a6fe8c] Container image busybox for container sec-ctx-demo has not been allowed.",
          "Payload": null
        }
      }
    },
    "31": {
      "Name": "Prevent deployments from accessing unapproved volume types",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.2"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithUnapprovedVolumeTypesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anVolumeTypeIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "32": {
      "Name": "Prevent deployments from accessing unapproved volume types",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.2"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithUnapprovedVolumeTypesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anVolumeTypeIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Failed",
          "Error": "pod was not created - test failed: pod creation error: map[podcreation-error: psp-container-allowed-images:podcreation-error: psp-host-network] admission webhook \"validation.gatekeeper.sh\" denied the request: [denied by azurepolicy-container-allowed-images-d0318bd54c8157a6fe8c] Container image busybox for container sec-ctx-demo has not been allowed.",
          "Payload": null
        }
      }
    },
    "33": {
      "Name": "Prevent deployments from accessing unapproved volume types",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.2"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithUnapprovedVolumeTypesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anVolumeTypeIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Failed",
          "Error": "pod was not created - test failed: pod creation error: map[podcreation-error: psp-container-allowed-images:podcreation-error: psp-allowed-portrange] admission webhook \"validation.gatekeeper.sh\" denied the request: [denied by azurepolicy-container-allowed-images-d0318bd54c8157a6fe8c] Container image busybox for container sec-ctx-demo has not been allowed.",
          "Payload": null
        }
      }
    },
    "34": {
      "Name": "Prevent deployments from running without approved seccomp profile",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.3"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithoutApprovedSeccompProfilesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anSeccompProfileIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Failed",
          "Error": "pod  was created - test failed",
          "Payload": null
        }
      }
    },
    "35": {
      "Name": "Prevent deployments from running without approved seccomp profile",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.3"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithoutApprovedSeccompProfilesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anSeccompProfileIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformASystemCallThatIsBlockedByTheSeccompProfile",
          "Description": "",
          "Result": "Failed",
          "Error": "Likely an internal Probr error. Error raised trying to execute verification command (unshare)",
          "Payload": null
        }
      }
    },
    "36": {
      "Name": "Prevent deployments from running without approved seccomp profile",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/none/psp-0.3"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventKubernetesDeploymentsWithoutApprovedSeccompProfilesFromBeingDeployedToAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "anSeccompProfileIsRequestedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Failed",
          "Error": "pod  was created - test failed",
          "Payload": null
        }
      }
    },
    "4": {
      "Name": "Prevent a deployment from running with the hostPID",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.2"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesContainerFromRunningUsingTheHostPIDOnTheActiveKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostPIDRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostPIDNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "5": {
      "Name": "Prevent a deployment from running with the hostPID",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.2"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesContainerFromRunningUsingTheHostPIDOnTheActiveKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostPIDRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostPIDNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "6": {
      "Name": "Prevent a deployment from running with the hostPID",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.2"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesContainerFromRunningUsingTheHostPIDOnTheActiveKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostPIDRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostPIDNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "7": {
      "Name": "Prevent a deployment from running with the hostIPC flag.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.3"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheHostIPCInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostIPCRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostIPCNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "8": {
      "Name": "Prevent a deployment from running with the hostIPC flag.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.3"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheHostIPCInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostIPCRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostIPCNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "9": {
      "Name": "Prevent a deployment from running with the hostIPC flag.",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@control/family/pod_security_policy",
        "@csp/azure",
        "@csp/aws",
        "@csp/gcp",
        "@standard/cis/5.2",
        "@control/type/preventative",
        "@standard/cis/5.2.3"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "someSystemExistsToPreventAKubernetesDeploymentFromRunningUsingTheHostIPCInAnExistingKubernetesCluster",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "hostIPCRequestIsMarkedForTheKubernetesDeployment",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "4": {
          "Name": "theOperationWillWithAnError",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "5": {
          "Name": "iShouldNotBeAbleToPerformACommandThatProvidesAccessToTheHostIPCNamespace",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "6": {
          "Name": "performAllowedCommand",
          "Description": "",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    }
  }
}