{
  "Name": "container_registry_access",
  "PodsDestroyed": 1,
  "ScenariosAttempted": 2,
  "ScenariosSucceeded": 2,
  "ScenariosFailed": 0,
  "Result": "Success",
  "Scenarios": {
    "1": {
      "Name": "Ensure deployment from an authorised container registry is allowed",
      "Result": "Passed",
      "Tags": [
        "@k-cra",
        "@probes/kubernetes/container_registry_access",
        "@k-cra-002"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in 'C:\\Users\\eknight\\.kube\\config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "C:\\Users\\eknight\\.kube\\config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "iAmAuthorisedToPullFromAContainerRegistry",
          "Description": "Attempted to create a new pod using an image pulled from authorized registry; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "AuthorizedRegistry": "citihubprod.azurecr.io",
            "PodAudit": {
              "PodName": "ca-test-citihubprod-azurecr-io-250221-123524-69",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "container-access-test",
              "Image": "citihubprod.azurecr.io/citihub/probr-probe",
              "SecurityContext": null
            }
          }
        },
        "3": {
          "Name": "theDeploymentAttemptIsAllowed",
          "Description": "Asserts pod creation result in scenario state is successful; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "ca-test-citihubprod-azurecr-io-250221-123524-69",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "2": {
      "Name": "Ensure deployment from an unauthorised container registry is denied",
      "Result": "Passed",
      "Tags": [
        "@k-cra",
        "@probes/kubernetes/container_registry_access",
        "@k-cra-003"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in 'C:\\Users\\eknight\\.kube\\config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "C:\\Users\\eknight\\.kube\\config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aUserAttemptsToDeployUnauthorisedContainer",
          "Description": "Attempts to deploy a container from docker.io. Retains pod creation result in scenario state; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "UnauthorizedRegistry": "docker.io",
            "PodAudit": {
              "PodName": "ca-test-docker-io-250221-123526-17",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "container-access-test",
              "Image": "docker.io/citihub/probr-probe",
              "SecurityContext": null
            }
          }
        },
        "3": {
          "Name": "theDeploymentAttemptIsDenied",
          "Description": "Asserts pod creation result in scenario state is denied; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": {
                "ReasonCodes": {
                  "4": 1
                }
              },
              "ExpectedReason": 4,
              "CommandExitCode": 0
            }
          }
        }
      }
    }
  }
}