{
  "Name": "iam",
  "PodsDestroyed": 0,
  "ScenariosAttempted": 4,
  "ScenariosSucceeded": 0,
  "ScenariosFailed": 4,
  "Result": "Failed",
  "Scenarios": {
    "1": {
      "Name": "Prevent cross namespace Azure Identities",
      "Result": "Failed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-001"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in 'C:\\Users\\eknight\\.kube\\config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "C:\\Users\\eknight\\.kube\\config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aNamedAzureIdentityBindingExistsInNamedNS",
          "Description": "Check whether 'probr-aib' Azure Identity Binding exists in namespace 'default'; ",
          "Result": "Failed",
          "Error": "error raised when checking for AzureIdentityBinding: the server could not find the requested resource",
          "Payload": null
        }
      }
    },
    "2": {
      "Name": "Prevent cross namespace Azure Identities",
      "Result": "Failed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-001"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in 'C:\\Users\\eknight\\.kube\\config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "C:\\Users\\eknight\\.kube\\config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aNamedAzureIdentityBindingExistsInNamedNS",
          "Description": "Check whether 'probr-aib' Azure Identity Binding exists in namespace 'default'; ",
          "Result": "Failed",
          "Error": "error raised when checking for AzureIdentityBinding: the server could not find the requested resource",
          "Payload": null
        }
      }
    },
    "3": {
      "Name": "Prevent cross namespace Azure Identity Bindings",
      "Result": "Failed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-002"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in 'C:\\Users\\eknight\\.kube\\config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "C:\\Users\\eknight\\.kube\\config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aNamedAzureIdentityExistsInNamedNS",
          "Description": "Validate that 'probr-probe' identity is found in 'default' namespace; ",
          "Result": "Failed",
          "Error": "error raised when checking for AzureIdentity: the server could not find the requested resource",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "4": {
      "Name": "Prevent access to AKS credentials via Azure Identity Components",
      "Result": "Failed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-003"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in 'C:\\Users\\eknight\\.kube\\config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "C:\\Users\\eknight\\.kube\\config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "theClusterHasManagedIdentityComponentsDeployed",
          "Description": "Get pods from 'kube-system' namespace; Validate that Cluster has managed identity component deployed by checking whether a pod with 'mic-' prefix is found; ",
          "Result": "Failed",
          "Error": "no MIC pods found - test fail",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    }
  }
}