stages:
  - lint
  - build
  - test
  - release

# LINT ##
go_lint:
  stage: lint
  image: golang:1.14
  only:
    - merge_requests
  before_script:
    - cd $GOPATH/src
    - mkdir -p gitlab.com/$CI_PROJECT_NAMESPACE
    - cd gitlab.com/$CI_PROJECT_NAMESPACE
    - ln -s $CI_PROJECT_DIR
    - cd $CI_PROJECT_NAME
  script:
    - go mod download
    - go get -u golang.org/x/lint/golint
    - golint ./...
    - go vet ./...


## BUILD ##
build_executable:
  stage: build
  only:
    - merge_requests
  artifacts:
    untracked: true
  image: golang:1.14
  script:
    - go build -o probr cmd/probr-cli/main.go


# TEST ##
unit_tests:
  stage: test
  image: citihub/build:latest
  only:
    - merge_requests
  before_script:
    - export TEST_KUBE_CONFIG=/tmp/test-config
    - echo ${kube_config} | base64 -id > $TEST_KUBE_CONFIG
    - export KUBE_CONFIG=$TEST_KUBE_CONFIG
    - export LOGLEVEL=INFO
  script:
    - cd $CI_PROJECT_DIR/test/unit
    - go test -v ./...

test_run:
  stage: test
  image: node
  dependencies: 
    - build_executable
  only:
    - merge_requests
    - master
  before_script:
    - export TEST_KUBE_CONFIG=/tmp/test-config
    - echo ${kube_config} | base64 -id > $TEST_KUBE_CONFIG
    - export KUBE_CONFIG=$TEST_KUBE_CONFIG
    - export LOGLEVEL=INFO
  script:
    - ./probr || if [ $? -eq 1 ]; then echo "success"; else exit 1; fi
